开始准备评估数据：第3批次生成器生成共5张图片的数据：
batch_X.shape(0-255之间原始图像): (5, 300, 480, 3)
batch_image_ids: ['1478899617425904275', '1478899628281049213', '1478899653988577849', '1478899713403220600', '1478899715689427508']
batch_eval_neutral=None: None
batch_inverse_transforms: [[<function Resize.__call__.<locals>.inverter at 0x000001FBE5DD9620>], [<function Resize.__call__.<locals>.inverter at 0x000001FD60255F28>], [<function Resize.__call__.<locals>.inverter at 0x000001FD641BE9D8>], [<function Resize.__call__.<locals>.inverter at 0x000001FD641BEAE8>], [<function Resize.__call__.<locals>.inverter at 0x000001FD641BEB70>]]
batch_orig_labels(人工标注框): [array([[  1, 130, 151, 140, 166],
       [  1, 174, 136, 324, 186],
       [  1, 188, 147, 197, 160],
       [  1, 195, 146, 221, 166],
       [  3, 220, 139, 230, 159],
       [  3, 286, 133, 296, 152],
       [  3, 394, 127, 404, 171],
       [  3, 396, 125, 404, 169],
       [  3, 398, 125, 410, 170],
       [  3, 400, 127, 414, 171],
       [  3, 415, 122, 430, 171],
       [  3, 427, 123, 439, 167],
       [  3, 435, 122, 444, 162],
       [  3, 437, 121, 444, 134],
       [  3, 437, 124, 449, 167],
       [  3, 438, 123, 448, 169],
       [  3, 445, 118, 460, 173],
       [  5, 272,  78, 286, 106]]), array([[  1,  42, 154,  79, 179],
       [  1,  89, 149, 129, 177],
       [  1, 128, 149, 143, 168],
       [  1, 141, 146, 156, 165],
       [  1, 158, 142, 203, 171],
       [  1, 197, 148, 220, 164],
       [  3,  17, 149,  26, 179],
       [  3,  25, 162,  33, 178],
       [  3,  31, 146,  42, 180],
       [  3,  34, 146,  43, 179],
       [  3, 250, 136, 256, 160],
       [  3, 467, 120, 479, 167],
       [  5, 273,  79, 285, 108]]), array([[  1,   0, 156,  86, 228],
       [  1,  11, 160,  57, 192],
       [  1,  59, 147, 102, 199],
       [  1, 102, 155, 139, 188],
       [  1, 207, 152, 218, 174],
       [  1, 217, 157, 250, 182],
       [  5, 355,  32, 388,  90]]), array([[  1,  14, 150,  56, 177],
       [  1,  63, 150,  97, 171],
       [  1, 159, 152, 180, 165],
       [  1, 179, 147, 193, 158],
       [  1, 239, 143, 280, 176],
       [  1, 263, 140, 351, 205],
       [  3,  54, 148,  64, 179]]), array([[  1, 126, 156, 162, 178],
       [  1, 153, 155, 165, 174],
       [  1, 162, 155, 171, 172],
       [  1, 165, 149, 189, 168],
       [  1, 167, 150, 185, 167],
       [  1, 237, 155, 253, 172],
       [  1, 250, 148, 303, 187],
       [  1, 251, 151, 292, 185],
       [  1, 270, 128, 349, 211],
       [  1, 274, 137, 334, 203],
       [  1, 306, 116, 479, 257]])]
y_pred(最原始的预测输出矩阵，需要解码): (5, 17538, 18)
第3批次预测矩阵解码后(看10个)： 5 (128, 6) [[1.00000000e+00 9.71155047e-01 1.75658712e+02 1.38796860e+02
  3.30367212e+02 1.90450019e+02]
 [1.00000000e+00 9.55174088e-01 8.83357286e+01 1.47381824e+02
  1.30195355e+02 1.79159778e+02]
 [1.00000000e+00 9.43934679e-01 1.29676566e+02 1.46731058e+02
  1.52581172e+02 1.65350908e+02]
 [1.00000000e+00 8.47646296e-01 4.41277242e+01 1.56785327e+02
  7.41254640e+01 1.76859730e+02]
 [1.00000000e+00 7.58808911e-01 1.23793759e+02 1.48077187e+02
  1.44118409e+02 1.68524086e+02]
 [1.00000000e+00 4.03826416e-01 1.38840780e+02 1.45773983e+02
  1.55981169e+02 1.62846172e+02]
 [1.00000000e+00 3.77757579e-01 6.48662210e+01 1.57295054e+02
  8.74233556e+01 1.75434083e+02]
 [1.00000000e+00 3.50058347e-01 1.66762133e+02 1.47717002e+02
  1.80896902e+02 1.59776223e+02]
 [1.00000000e+00 2.76441216e-01 2.56129274e+02 1.36909282e+02
  3.28777628e+02 1.80275595e+02]
 [1.00000000e+00 1.81206018e-01 1.77170591e+02 1.42549387e+02
  2.55981245e+02 1.79713529e+02]]
第3批次预测矩阵逆变换后(看10个-有点区别)： 5 (128, 6) [[1.00000000e+00 9.71155047e-01 1.76000000e+02 1.39000000e+02
  3.30000000e+02 1.90000000e+02]
 [1.00000000e+00 9.55174088e-01 8.80000000e+01 1.47000000e+02
  1.30000000e+02 1.79000000e+02]
 [1.00000000e+00 9.43934679e-01 1.30000000e+02 1.47000000e+02
  1.53000000e+02 1.65000000e+02]
 [1.00000000e+00 8.47646296e-01 4.40000000e+01 1.57000000e+02
  7.40000000e+01 1.77000000e+02]
 [1.00000000e+00 7.58808911e-01 1.24000000e+02 1.48000000e+02
  1.44000000e+02 1.69000000e+02]
 [1.00000000e+00 4.03826416e-01 1.39000000e+02 1.46000000e+02
  1.56000000e+02 1.63000000e+02]
 [1.00000000e+00 3.77757579e-01 6.50000000e+01 1.57000000e+02
  8.70000000e+01 1.75000000e+02]
 [1.00000000e+00 3.50058347e-01 1.67000000e+02 1.48000000e+02
  1.81000000e+02 1.60000000e+02]
 [1.00000000e+00 2.76441216e-01 2.56000000e+02 1.37000000e+02
  3.29000000e+02 1.80000000e+02]
 [1.00000000e+00 1.81206018e-01 1.77000000e+02 1.43000000e+02
  2.56000000e+02 1.80000000e+02]]
第3批次预测的最终结果中第0张图片id为：1478899617425904275
该图片的模型预测结果(类别 conf box坐标)： [[ 1.00000000e+00  9.71155047e-01  1.76000000e+02  1.39000000e+02
   3.30000000e+02  1.90000000e+02]
 [ 1.00000000e+00  9.55174088e-01  8.80000000e+01  1.47000000e+02
   1.30000000e+02  1.79000000e+02]
 [ 1.00000000e+00  9.43934679e-01  1.30000000e+02  1.47000000e+02
   1.53000000e+02  1.65000000e+02]
 [ 1.00000000e+00  8.47646296e-01  4.40000000e+01  1.57000000e+02
   7.40000000e+01  1.77000000e+02]
 [ 1.00000000e+00  7.58808911e-01  1.24000000e+02  1.48000000e+02
   1.44000000e+02  1.69000000e+02]
 [ 1.00000000e+00  4.03826416e-01  1.39000000e+02  1.46000000e+02
   1.56000000e+02  1.63000000e+02]
 [ 1.00000000e+00  3.77757579e-01  6.50000000e+01  1.57000000e+02
   8.70000000e+01  1.75000000e+02]
 [ 1.00000000e+00  3.50058347e-01  1.67000000e+02  1.48000000e+02
   1.81000000e+02  1.60000000e+02]
 [ 1.00000000e+00  2.76441216e-01  2.56000000e+02  1.37000000e+02
   3.29000000e+02  1.80000000e+02]
 [ 1.00000000e+00  1.81206018e-01  1.77000000e+02  1.43000000e+02
   2.56000000e+02  1.80000000e+02]
 [ 1.00000000e+00  1.60869479e-01  1.12000000e+02  1.47000000e+02
   1.37000000e+02  1.71000000e+02]
 [ 1.00000000e+00  1.31177723e-01  1.59000000e+02  1.46000000e+02
   1.72000000e+02  1.58000000e+02]
 [ 1.00000000e+00  1.16465628e-01  3.30000000e+01  1.49000000e+02
   6.70000000e+01  1.80000000e+02]
 [ 1.00000000e+00  1.08269155e-01  1.70000000e+02  1.46000000e+02
   1.85000000e+02  1.56000000e+02]
 [ 1.00000000e+00  1.03447787e-01  9.50000000e+01  1.43000000e+02
   1.49000000e+02  1.73000000e+02]
 [ 2.00000000e+00  1.43984661e-01  2.78000000e+02 -1.60000000e+01
   4.79000000e+02  1.42000000e+02]
 [ 2.00000000e+00  1.34391084e-01  4.19000000e+02  3.60000000e+01
   4.79000000e+02  1.14000000e+02]
 [ 3.00000000e+00  6.61277413e-01  4.37000000e+02  1.29000000e+02
   4.51000000e+02  1.72000000e+02]
 [ 3.00000000e+00  6.58099771e-01  3.97000000e+02  1.32000000e+02
   4.12000000e+02  1.78000000e+02]
 [ 3.00000000e+00  6.34280741e-01  3.92000000e+02  1.14000000e+02
   4.14000000e+02  1.87000000e+02]
 [ 3.00000000e+00  5.83960116e-01  4.31000000e+02  1.26000000e+02
   4.43000000e+02  1.74000000e+02]
 [ 3.00000000e+00  5.75906992e-01  4.34000000e+02  1.21000000e+02
   4.59000000e+02  1.75000000e+02]
 [ 3.00000000e+00  5.32960355e-01  4.44000000e+02  1.24000000e+02
   4.57000000e+02  1.71000000e+02]
 [ 3.00000000e+00  4.75747168e-01  4.25000000e+02  1.19000000e+02
   4.48000000e+02  1.76000000e+02]
 [ 3.00000000e+00  4.13919330e-01  4.04000000e+02  1.36000000e+02
   4.17000000e+02  1.75000000e+02]
 [ 3.00000000e+00  3.62147331e-01  4.33000000e+02  1.42000000e+02
   4.42000000e+02  1.70000000e+02]
 [ 3.00000000e+00  3.56788099e-01  4.07000000e+02  1.19000000e+02
   4.37000000e+02  1.73000000e+02]
 [ 3.00000000e+00  2.64280826e-01  4.14000000e+02  1.28000000e+02
   4.27000000e+02  1.68000000e+02]
 [ 3.00000000e+00  2.29083121e-01  4.54000000e+02  1.26000000e+02
   4.66000000e+02  1.69000000e+02]
 [ 3.00000000e+00  2.20518544e-01  4.22000000e+02  1.34000000e+02
   4.34000000e+02  1.66000000e+02]
 [ 3.00000000e+00  2.15667382e-01  3.93000000e+02  1.25000000e+02
   4.06000000e+02  1.73000000e+02]
 [ 3.00000000e+00  2.00569063e-01  4.38000000e+02  1.48000000e+02
   4.49000000e+02  1.70000000e+02]
 [ 3.00000000e+00  1.79101393e-01  4.14000000e+02  1.43000000e+02
   4.24000000e+02  1.70000000e+02]
 [ 3.00000000e+00  1.61932528e-01  4.52000000e+02  4.50000000e+01
   4.69000000e+02  9.30000000e+01]
 [ 3.00000000e+00  1.53617546e-01  3.96000000e+02  1.21000000e+02
   4.11000000e+02  1.60000000e+02]
 [ 3.00000000e+00  1.47292212e-01  3.00000000e+01  1.39000000e+02
   4.40000000e+01  1.78000000e+02]
 [ 3.00000000e+00  1.13993056e-01  4.60000000e+02  1.29000000e+02
   4.73000000e+02  1.67000000e+02]
 [ 3.00000000e+00  1.11819580e-01  4.44000000e+02  1.49000000e+02
   4.55000000e+02  1.70000000e+02]
 [ 3.00000000e+00  1.11405797e-01  4.26000000e+02  1.22000000e+02
   4.42000000e+02  1.47000000e+02]
 [ 5.00000000e+00  1.03946395e-01  2.71000000e+02  7.60000000e+01
   2.84000000e+02  1.01000000e+02]]
第3批次预测的最终结果中第1张图片id为：1478899628281049213
该图片的模型预测结果(类别 conf box坐标)： [[1.00000000e+00 9.99453485e-01 1.62000000e+02 1.42000000e+02
  2.00000000e+02 1.72000000e+02]
 [1.00000000e+00 9.90770340e-01 1.98000000e+02 1.46000000e+02
  2.22000000e+02 1.65000000e+02]
 [1.00000000e+00 9.31979239e-01 8.70000000e+01 1.44000000e+02
  1.40000000e+02 1.76000000e+02]
 [1.00000000e+00 8.54428411e-01 4.00000000e+01 1.55000000e+02
  7.90000000e+01 1.78000000e+02]
 [1.00000000e+00 7.70070553e-01 1.31000000e+02 1.47000000e+02
  1.51000000e+02 1.65000000e+02]
 [1.00000000e+00 4.68734562e-01 1.24000000e+02 1.48000000e+02
  1.44000000e+02 1.69000000e+02]
 [1.00000000e+00 4.38657731e-01 6.30000000e+01 1.56000000e+02
  8.90000000e+01 1.76000000e+02]
 [1.00000000e+00 4.17656630e-01 1.38000000e+02 1.46000000e+02
  1.57000000e+02 1.63000000e+02]
 [1.00000000e+00 1.82720065e-01 4.57000000e+02 1.48000000e+02
  4.75000000e+02 1.71000000e+02]
 [1.00000000e+00 1.54669896e-01 8.70000000e+01 1.53000000e+02
  1.19000000e+02 1.78000000e+02]
 [1.00000000e+00 1.52322739e-01 1.78000000e+02 1.44000000e+02
  1.98000000e+02 1.69000000e+02]
 [1.00000000e+00 1.12628341e-01 5.60000000e+01 1.54000000e+02
  8.30000000e+01 1.68000000e+02]
 [1.00000000e+00 1.12585276e-01 1.51000000e+02 1.48000000e+02
  1.64000000e+02 1.62000000e+02]
 [1.00000000e+00 1.11955293e-01 1.13000000e+02 1.47000000e+02
  1.36000000e+02 1.71000000e+02]
 [1.00000000e+00 1.06466390e-01 7.70000000e+01 1.53000000e+02
  9.10000000e+01 1.72000000e+02]
 [2.00000000e+00 1.31462306e-01 4.21000000e+02 3.40000000e+01
  4.79000000e+02 1.15000000e+02]
 [3.00000000e+00 1.69475913e-01 4.56000000e+02 1.23000000e+02
  4.68000000e+02 1.62000000e+02]
 [3.00000000e+00 1.41269386e-01 4.01000000e+02 1.34000000e+02
  4.11000000e+02 1.64000000e+02]
 [3.00000000e+00 1.29321918e-01 4.53000000e+02 5.70000000e+01
  4.69000000e+02 9.80000000e+01]
 [3.00000000e+00 1.13060825e-01 2.48000000e+02 1.40000000e+02
  2.59000000e+02 1.63000000e+02]
 [3.00000000e+00 1.06155105e-01 4.58000000e+02 1.32000000e+02
  4.76000000e+02 1.69000000e+02]
 [5.00000000e+00 1.76520362e-01 2.72000000e+02 7.70000000e+01
  2.83000000e+02 1.07000000e+02]
 [5.00000000e+00 1.01430610e-01 2.78000000e+02 7.40000000e+01
  2.89000000e+02 1.05000000e+02]]
第3批次预测的最终结果中第2张图片id为：1478899653988577849
该图片的模型预测结果(类别 conf box坐标)： [[ 1.00000000e+00  9.97535348e-01  2.15000000e+02  1.56000000e+02
   2.54000000e+02  1.81000000e+02]
 [ 1.00000000e+00  9.75084484e-01  2.00000000e+00  1.54000000e+02
   1.03000000e+02  2.27000000e+02]
 [ 1.00000000e+00  9.70897496e-01  9.40000000e+01  1.56000000e+02
   1.43000000e+02  1.91000000e+02]
 [ 1.00000000e+00  9.52006936e-01  1.40000000e+02  1.56000000e+02
   1.67000000e+02  1.79000000e+02]
 [ 1.00000000e+00  7.10478187e-01  5.90000000e+01  1.51000000e+02
   1.10000000e+02  1.97000000e+02]
 [ 1.00000000e+00  4.10417616e-01  1.52000000e+02  1.57000000e+02
   1.73000000e+02  1.75000000e+02]
 [ 1.00000000e+00  3.56458962e-01  2.12000000e+02  1.58000000e+02
   2.32000000e+02  1.76000000e+02]
 [ 1.00000000e+00  3.48490328e-01  1.31000000e+02  1.59000000e+02
   1.54000000e+02  1.79000000e+02]
 [ 1.00000000e+00  1.98769316e-01 -7.00000000e+00  2.69000000e+02
   4.50000000e+01  2.99000000e+02]
 [ 1.00000000e+00  1.88409537e-01  1.24000000e+02  1.55000000e+02
   1.62000000e+02  1.84000000e+02]
 [ 1.00000000e+00  1.80119440e-01  7.00000000e+00  1.49000000e+02
   9.00000000e+01  1.77000000e+02]
 [ 1.00000000e+00  1.59789249e-01  1.01000000e+02  1.57000000e+02
   1.35000000e+02  1.79000000e+02]
 [ 1.00000000e+00  1.29179657e-01  1.89000000e+02  1.59000000e+02
   2.02000000e+02  1.68000000e+02]
 [ 1.00000000e+00  1.21057846e-01 -3.00000000e+00  1.97000000e+02
   4.00000000e+01  2.31000000e+02]
 [ 1.00000000e+00  1.19771272e-01  1.81000000e+02  1.60000000e+02
   1.95000000e+02  1.69000000e+02]
 [ 1.00000000e+00  1.18677109e-01  2.08000000e+02  1.59000000e+02
   2.20000000e+02  1.73000000e+02]
 [ 1.00000000e+00  1.08528465e-01  1.66000000e+02  1.58000000e+02
   1.81000000e+02  1.72000000e+02]
 [ 1.00000000e+00  1.01176448e-01  1.99000000e+02  1.59000000e+02
   2.10000000e+02  1.69000000e+02]
 [ 2.00000000e+00  1.49443880e-01  2.93000000e+02 -5.00000000e+00
   4.62000000e+02  2.25000000e+02]
 [ 3.00000000e+00  1.25489026e-01  2.77000000e+02  1.52000000e+02
   2.89000000e+02  1.83000000e+02]]
第3批次预测的最终结果中第3张图片id为：1478899713403220600
该图片的模型预测结果(类别 conf box坐标)： [[1.00000000e+00 9.96899605e-01 2.67000000e+02 1.35000000e+02
  3.53000000e+02 2.01000000e+02]
 [1.00000000e+00 9.96253252e-01 1.30000000e+01 1.50000000e+02
  5.50000000e+01 1.76000000e+02]
 [1.00000000e+00 9.93648827e-01 2.38000000e+02 1.41000000e+02
  2.82000000e+02 1.77000000e+02]
 [1.00000000e+00 9.55974996e-01 6.50000000e+01 1.51000000e+02
  9.60000000e+01 1.70000000e+02]
 [1.00000000e+00 9.47986126e-01 1.62000000e+02 1.50000000e+02
  1.84000000e+02 1.66000000e+02]
 [1.00000000e+00 9.19561505e-01 3.67000000e+02 1.45000000e+02
  4.79000000e+02 2.86000000e+02]
 [1.00000000e+00 6.39776528e-01 1.73000000e+02 1.50000000e+02
  1.90000000e+02 1.63000000e+02]
 [1.00000000e+00 5.00476718e-01 3.00000000e+01 1.49000000e+02
  6.30000000e+01 1.79000000e+02]
 [1.00000000e+00 4.63117212e-01 2.51000000e+02 1.38000000e+02
  3.03000000e+02 1.87000000e+02]
 [1.00000000e+00 3.51715297e-01 1.81000000e+02 1.49000000e+02
  1.95000000e+02 1.60000000e+02]
 [1.00000000e+00 2.69305617e-01 2.29000000e+02 1.49000000e+02
  2.42000000e+02 1.66000000e+02]
 [1.00000000e+00 2.07429066e-01 2.24000000e+02 1.48000000e+02
  2.35000000e+02 1.60000000e+02]
 [1.00000000e+00 2.04029724e-01 4.70000000e+01 1.53000000e+02
  6.90000000e+01 1.77000000e+02]
 [1.00000000e+00 1.99597046e-01 3.68000000e+02 1.64000000e+02
  3.90000000e+02 1.85000000e+02]
 [1.00000000e+00 1.88517421e-01 4.60000000e+02 1.90000000e+02
  4.81000000e+02 2.21000000e+02]
 [1.00000000e+00 1.61501408e-01 2.36000000e+02 1.43000000e+02
  2.54000000e+02 1.69000000e+02]
 [1.00000000e+00 1.60383478e-01 3.09000000e+02 1.43000000e+02
  3.50000000e+02 1.75000000e+02]
 [1.00000000e+00 1.33836687e-01 3.00000000e+00 1.37000000e+02
  4.80000000e+01 1.81000000e+02]
 [1.00000000e+00 1.32978857e-01 3.17000000e+02 1.44000000e+02
  3.49000000e+02 1.59000000e+02]
 [1.00000000e+00 1.20140851e-01 5.50000000e+01 1.54000000e+02
  9.00000000e+01 1.73000000e+02]
 [1.00000000e+00 1.13433801e-01 7.10000000e+01 1.56000000e+02
  1.06000000e+02 1.72000000e+02]
 [1.00000000e+00 1.05697058e-01 3.61000000e+02 1.54000000e+02
  4.36000000e+02 2.53000000e+02]
 [1.00000000e+00 1.02585740e-01 2.31000000e+02 1.22000000e+02
  2.63000000e+02 1.71000000e+02]]
第3批次预测的最终结果中第4张图片id为：1478899715689427508
该图片的模型预测结果(类别 conf box坐标)： [[1.00000000e+00 9.98168588e-01 1.31000000e+02 1.53000000e+02
  1.63000000e+02 1.77000000e+02]
 [1.00000000e+00 9.96977091e-01 2.50000000e+02 1.50000000e+02
  2.91000000e+02 1.84000000e+02]
 [1.00000000e+00 9.77467775e-01 1.68000000e+02 1.49000000e+02
  1.86000000e+02 1.69000000e+02]
 [1.00000000e+00 9.76415455e-01 3.13000000e+02 1.15000000e+02
  4.80000000e+02 2.62000000e+02]
 [1.00000000e+00 9.28893507e-01 2.82000000e+02 1.31000000e+02
  3.46000000e+02 2.12000000e+02]
 [1.00000000e+00 8.65129054e-01 2.36000000e+02 1.54000000e+02
  2.56000000e+02 1.73000000e+02]
 [1.00000000e+00 6.84601903e-01 2.76000000e+02 1.43000000e+02
  3.20000000e+02 2.09000000e+02]
 [1.00000000e+00 6.61217332e-01 2.49000000e+02 1.44000000e+02
  3.14000000e+02 1.93000000e+02]
 [1.00000000e+00 5.71399271e-01 1.43000000e+02 1.55000000e+02
  1.66000000e+02 1.73000000e+02]
 [1.00000000e+00 5.12814462e-01 2.92000000e+02 1.25000000e+02
  4.01000000e+02 2.35000000e+02]
 [1.00000000e+00 3.04940373e-01 1.77000000e+02 1.52000000e+02
  1.92000000e+02 1.65000000e+02]
 [1.00000000e+00 2.88642913e-01 2.68000000e+02 1.49000000e+02
  3.00000000e+02 2.03000000e+02]
 [1.00000000e+00 2.46580869e-01 1.57000000e+02 1.55000000e+02
  1.70000000e+02 1.72000000e+02]
 [1.00000000e+00 2.45272577e-01 2.94000000e+02 1.40000000e+02
  3.35000000e+02 1.75000000e+02]
 [1.00000000e+00 1.96796760e-01 1.93000000e+02 1.54000000e+02
  2.01000000e+02 1.62000000e+02]
 [1.00000000e+00 1.92464381e-01 1.65000000e+02 1.53000000e+02
  1.80000000e+02 1.70000000e+02]
 [1.00000000e+00 1.74887404e-01 2.39000000e+02 1.50000000e+02
  2.66000000e+02 1.78000000e+02]
 [1.00000000e+00 1.65509894e-01 2.30000000e+02 1.53000000e+02
  2.43000000e+02 1.66000000e+02]
 [1.00000000e+00 1.32672712e-01 2.87000000e+02 1.31000000e+02
  3.49000000e+02 1.64000000e+02]
 [1.00000000e+00 1.32344395e-01 2.73000000e+02 1.40000000e+02
  3.08000000e+02 1.80000000e+02]
 [1.00000000e+00 1.02451943e-01 2.24000000e+02 1.53000000e+02
  2.36000000e+02 1.64000000e+02]
 [1.00000000e+00 1.01898000e-01 2.14000000e+02 1.54000000e+02
  2.25000000e+02 1.62000000e+02]]
共100张图片 一个批次5张 每张图片有若干个box（class_id,conf,坐标） 按类别id放好(image_id, conf,坐标)
评估数据集中模型预测的所有结果放self.prediction_results(按类别数6):
类别为0 背景的box个数： 0 []
类别为1 预测为：汽车的box个数： 1330 [('1478899063845976339', 0.9978118538856506, 273.0, 146.0, 330.0, 185.0), ('1478899063845976339', 0.9755624532699585, 255.0, 157.0, 279.0, 177.0), ('1478899063845976339', 0.7932758331298828, 357.0, 118.0, 482.0, 246.0), ('1478899063845976339', 0.25628662109375, 238.0, 161.0, 256.0, 176.0), ('1478899063845976339', 0.187789186835289, 258.0, 154.0, 294.0, 184.0), ('1478899063845976339', 0.11132414638996124, 461.0, 92.0, 478.0, 114.0), ('1478899063845976339', 0.10521213710308075, 265.0, 154.0, 283.0, 179.0), ('1478899063845976339', 0.10008455812931061, 362.0, 138.0, 434.0, 230.0), ('1478899076415353128', 0.9973055124282837, 170.0, 136.0, 227.0, 181.0), ('1478899076415353128', 0.28599977493286133, 55.0, 131.0, 80.0, 152.0)]
类别为2 预测为：卡车的box个数： 120 [('1478899119261540850', 0.6603224277496338, 190.0, 136.0, 223.0, 169.0), ('1478899119261540850', 0.16177178919315338, 200.0, 143.0, 222.0, 163.0), ('1478899119261540850', 0.1586795449256897, 395.0, 119.0, 444.0, 169.0), ('1478899119261540850', 0.15028485655784607, 399.0, 141.0, 432.0, 172.0), ('1478899129544917445', 0.3839477002620697, 208.0, 143.0, 229.0, 165.0), ('1478899173534768372', 0.4461950659751892, 164.0, 127.0, 194.0, 163.0), ('1478899173534768372', 0.27648240327835083, 28.0, 136.0, 58.0, 162.0), ('1478899173534768372', 0.1456494778394699, 22.0, 136.0, 67.0, 176.0), ('1478899408905909438', 0.17099551856517792, 361.0, 42.0, 432.0, 121.0), ('1478899442040608642', 0.13513736426830292, 402.0, 167.0, 438.0, 200.0)]
类别为3 预测为：行人的box个数： 138 [('1478899362630665678', 0.15979743003845215, 375.0, 88.0, 387.0, 118.0), ('1478899362630665678', 0.1317155361175537, 6.0, 131.0, 20.0, 163.0), ('1478899373485354010', 0.3347310423851013, 318.0, 141.0, 335.0, 202.0), ('1478899373485354010', 0.2554287314414978, 320.0, 157.0, 332.0, 196.0), ('1478899373485354010', 0.15052175521850586, 300.0, 147.0, 315.0, 185.0), ('1478899373485354010', 0.11653861403465271, 323.0, 141.0, 338.0, 178.0), ('1478899408905909438', 0.566109836101532, 369.0, 125.0, 389.0, 177.0), ('1478899408905909438', 0.49676740169525146, 310.0, 136.0, 321.0, 165.0), ('1478899408905909438', 0.4406222701072693, 46.0, 154.0, 57.0, 185.0), ('1478899408905909438', 0.43624216318130493, 269.0, 139.0, 281.0, 171.0)]
类别为4 预测为：自行车的box个数： 5 [('1478899119261540850', 0.11311682313680649, 29.0, 160.0, 42.0, 176.0), ('1478900402378690293', 0.25420212745666504, 266.0, 144.0, 282.0, 181.0), ('1478900925679405380', 0.11335612088441849, 96.0, 147.0, 107.0, 168.0), ('1478901524963556898', 0.14025358855724335, 181.0, 146.0, 193.0, 167.0), ('1478901524963556898', 0.10132040828466415, 174.0, 150.0, 186.0, 168.0)]
类别为5 预测为：交通灯的box个数： 92 [('1478899129544917445', 0.10941989719867706, 331.0, 159.0, 349.0, 186.0), ('1478899362630665678', 0.4793298542499542, 269.0, 117.0, 280.0, 141.0), ('1478899362630665678', 0.24413539469242096, 150.0, 123.0, 161.0, 136.0), ('1478899373485354010', 0.49043136835098267, 55.0, 70.0, 70.0, 97.0), ('1478899373485354010', 0.38643401861190796, 340.0, 69.0, 357.0, 105.0), ('1478899408905909438', 0.28540441393852234, 246.0, 90.0, 255.0, 111.0), ('1478899408905909438', 0.14829201996326447, 247.0, 101.0, 255.0, 118.0), ('1478899408905909438', 0.11975870281457901, 243.0, 87.0, 252.0, 105.0), ('1478899408905909438', 0.10541718453168869, 423.0, 65.0, 432.0, 80.0), ('1478899408905909438', 0.1036117896437645, 2.0, 93.0, 19.0, 124.0)]
在所有评估数据集中每个类别的gt box人工标注框的数量(放self.num_gt_per_class)跟csv文件中统计的一样： [  0 466  18  95   5  86]

开始匹配预测的所有box，按类别来，判断每个类别预测的所有box是否正确？首先看类别 其次看iou
在match_predictions函数中：准备填充字典ground_truth,key:image_id,value:图片的all人工标注框,共有100张图片
类别为：1的所有预测结果的shape(还是一维向量)：(1330,)
类别为：2的所有预测结果的shape(还是一维向量)：(120,)
类别为：3的所有预测结果的shape(还是一维向量)：(138,)
类别为：4的所有预测结果的shape(还是一维向量)：(5,)
类别为：5的所有预测结果的shape(还是一维向量)：(92,)
交通灯class_id == 5类别的所有预测值： 92 [('1478899129544917445', 0.1094199 , 331., 159., 349., 186.)
 ('1478899362630665678', 0.47932985, 269., 117., 280., 141.)
 ('1478899362630665678', 0.2441354 , 150., 123., 161., 136.)
 ('1478899373485354010', 0.49043137,  55.,  70.,  70.,  97.)
 ('1478899373485354010', 0.38643402, 340.,  69., 357., 105.)
 ('1478899408905909438', 0.2854044 , 246.,  90., 255., 111.)
 ('1478899408905909438', 0.14829202, 247., 101., 255., 118.)
 ('1478899408905909438', 0.1197587 , 243.,  87., 252., 105.)
 ('1478899408905909438', 0.10541718, 423.,  65., 432.,  80.)
 ('1478899408905909438', 0.10361179,   2.,  93.,  19., 124.)
 ('1478899462606481570', 0.15708072, 241., 107., 250., 121.)
 ('1478899462606481570', 0.13247143,  34., 187.,  53., 221.)
 ('1478899462606481570', 0.11906895, 241., 112., 250., 127.)
 ('1478899462606481570', 0.10758445, 155., 190., 174., 219.)
 ('1478899470604520731', 0.16400275, 248., 105., 258., 120.)
 ('1478899470604520731', 0.10907356, 249., 101., 257., 113.)
 ('1478899470604520731', 0.10739294, 248., 110., 258., 127.)
 ('1478899617425904275', 0.1039464 , 271.,  76., 284., 101.)
 ('1478899628281049213', 0.17652036, 272.,  77., 283., 107.)
 ('1478899628281049213', 0.10143061, 278.,  74., 289., 105.)
 ('1478899739682849350', 0.11422241, 445., 105., 457., 134.)
 ('1478899846512839335', 0.15127023, 175., 121., 184., 136.)
 ('1478899870507739973', 0.24803905, 245., 106., 255., 130.)
 ('1478899870507739973', 0.24137534, 168., 110., 175., 131.)
 ('1478899870507739973', 0.18409728, 162., 109., 173., 133.)
 ('1478899897929065646', 0.49741185, 238.,  98., 249., 116.)
 ('1478899897929065646', 0.28114802,  34., 104.,  44., 122.)
 ('1478899897929065646', 0.10451768,  36., 108.,  47., 125.)
 ('1478899982480314766', 0.2120751 , 181.,  91., 191., 113.)
 ('1478899982480314766', 0.10880654, 402.,  71., 419., 100.)
 ('1478900060176835415', 0.15299681, 326., 121., 335., 137.)
 ('1478900060176835415', 0.1053175 , 320.,  98., 328., 113.)
 ('1478900060176835415', 0.10304052, 320., 118., 331., 136.)
 ('1478900064746491130', 0.21282242, 320.,  99., 328., 114.)
 ('1478900064746491130', 0.10012122, 327., 123., 335., 137.)
 ('1478900121875028906', 0.20760554, 192., 124., 201., 137.)
 ('1478900121875028906', 0.19260608, 114., 115., 120., 126.)
 ('1478900121875028906', 0.1529867 ,  60.,  91.,  72., 112.)
 ('1478900121875028906', 0.10467084, 167., 127., 177., 146.)
 ('1478900132157889917', 0.55710214, 154.,  85., 164., 103.)
 ('1478900132157889917', 0.24054733, 187.,  91., 199., 108.)
 ('1478900132157889917', 0.19342525, 152.,  83., 160., 100.)
 ('1478900132157889917', 0.15787952, 246.,  38., 256.,  62.)
 ('1478900132157889917', 0.148597  , 245., 118., 257., 136.)
 ('1478900132157889917', 0.13727559, 117.,  93., 129., 118.)
 ('1478900132157889917', 0.13559562, 340.,  35., 378.,  77.)
 ('1478900132157889917', 0.11019079, 119.,  88., 129., 110.)
 ('1478900132157889917', 0.10850961, 153.,  84., 158.,  96.)
 ('1478900377812355185', 0.14408419, 400.,  43., 412.,  68.)
 ('1478900377812355185', 0.14371714,   5.,  63.,  18.,  85.)
 ('1478900377812355185', 0.10042884, 397.,  42., 425.,  84.)
 ('1478900385239798995', 0.50024724,  96., 102., 109., 123.)
 ('1478900385239798995', 0.16650099,  97., 103., 114., 133.)
 ('1478900385239798995', 0.12970081, 151., 132., 159., 146.)
 ('1478900445225504484', 0.10273106, 330., 112., 340., 126.)
 ('1478900445225504484', 0.10087746,  88., 136.,  97., 151.)
 ('1478900802852152823', 0.136612  , 288., 100., 297., 119.)
 ('1478900803996421191', 0.10565472, 293.,  31., 306.,  55.)
 ('1478900895401299721', 0.1161682 , 416.,  48., 425.,  61.)
 ('1478900925679405380', 0.45765582, 381., 104., 393., 123.)
 ('1478900925679405380', 0.33162662, 238., 113., 249., 129.)
 ('1478900925679405380', 0.18960227, 233., 109., 245., 128.)
 ('1478900925679405380', 0.14647016, 439.,  60., 449.,  79.)
 ('1478900934249733042', 0.31124032, 393.,  94., 406., 121.)
 ('1478900934249733042', 0.13111116,  74.,  13., 106.,  58.)
 ('1478900934249733042', 0.12409323, 391.,  87., 414., 132.)
 ('1478900934249733042', 0.11097196, 397., 103., 409., 126.)
 ('1478900934249733042', 0.10821947, 381.,   4., 439.,  49.)
 ('1478900934249733042', 0.10543644,  73.,  23., 135.,  65.)
 ('1478901249601122528', 0.15068462,  39., 168.,  51., 195.)
 ('1478901249601122528', 0.100724  , 223., 115., 238., 138.)
 ('1478901282735746234', 0.35159963, 225., 119., 237., 137.)
 ('1478901282735746234', 0.10411449,  80., 126.,  91., 144.)
 ('1478901301588852810', 0.10875995, 186., 127., 192., 135.)
 ('1478901335296316867', 0.4454152 , 435.,  56., 461.,  93.)
 ('1478901335296316867', 0.26283485, 234.,  91., 241., 105.)
 ('1478901335296316867', 0.20394446, 321., 116., 331., 139.)
 ('1478901335296316867', 0.20134145, 196.,  92., 204., 109.)
 ('1478901335296316867', 0.17367928, 443.,  73., 455.,  99.)
 ('1478901335296316867', 0.16975777, 196.,  88., 210., 112.)
 ('1478901335296316867', 0.15962017, 149.,  90., 159., 109.)
 ('1478901335296316867', 0.1584513 , 325., 118., 334., 138.)
 ('1478901335296316867', 0.15559423, 326., 123., 336., 145.)
 ('1478901335296316867', 0.11254051, 189.,  93., 224., 141.)
 ('1478901335296316867', 0.11043534, 437.,  53., 454.,  83.)
 ('1478901335296316867', 0.10389242, 196.,  86., 202., 102.)
 ('1478901335296316867', 0.10384925, 191., 102., 202., 119.)
 ('1478901371857822733', 0.10174501, 112., 131., 121., 144.)
 ('1478901395851910040', 0.10733047,  99., 102., 108., 114.)
 ('1478901395851910040', 0.10389766, 274., 118., 282., 132.)
 ('1478901462120820712', 0.11403654, 404., 114., 421., 151.)
 ('1479498432968767695', 0.1182517 , 270.,  64., 282.,  84.)]
交通灯class_id == 5类别的所有预测box(按置信度从大到小排序后的)： [('1478900132157889917', 0.55710214, 154.,  85., 164., 103.)
 ('1478900385239798995', 0.50024724,  96., 102., 109., 123.)
 ('1478899897929065646', 0.49741185, 238.,  98., 249., 116.)
 ('1478899373485354010', 0.49043137,  55.,  70.,  70.,  97.)
 ('1478899362630665678', 0.47932985, 269., 117., 280., 141.)
 ('1478900925679405380', 0.45765582, 381., 104., 393., 123.)
 ('1478901335296316867', 0.4454152 , 435.,  56., 461.,  93.)
 ('1478899373485354010', 0.38643402, 340.,  69., 357., 105.)
 ('1478901282735746234', 0.35159963, 225., 119., 237., 137.)
 ('1478900925679405380', 0.33162662, 238., 113., 249., 129.)
 ('1478900934249733042', 0.31124032, 393.,  94., 406., 121.)
 ('1478899408905909438', 0.2854044 , 246.,  90., 255., 111.)
 ('1478899897929065646', 0.28114802,  34., 104.,  44., 122.)
 ('1478901335296316867', 0.26283485, 234.,  91., 241., 105.)
 ('1478899870507739973', 0.24803905, 245., 106., 255., 130.)
 ('1478899362630665678', 0.2441354 , 150., 123., 161., 136.)
 ('1478899870507739973', 0.24137534, 168., 110., 175., 131.)
 ('1478900132157889917', 0.24054733, 187.,  91., 199., 108.)
 ('1478900064746491130', 0.21282242, 320.,  99., 328., 114.)
 ('1478899982480314766', 0.2120751 , 181.,  91., 191., 113.)
 ('1478900121875028906', 0.20760554, 192., 124., 201., 137.)
 ('1478901335296316867', 0.20394446, 321., 116., 331., 139.)
 ('1478901335296316867', 0.20134145, 196.,  92., 204., 109.)
 ('1478900132157889917', 0.19342525, 152.,  83., 160., 100.)
 ('1478900121875028906', 0.19260608, 114., 115., 120., 126.)
 ('1478900925679405380', 0.18960227, 233., 109., 245., 128.)
 ('1478899870507739973', 0.18409728, 162., 109., 173., 133.)
 ('1478899628281049213', 0.17652036, 272.,  77., 283., 107.)
 ('1478901335296316867', 0.17367928, 443.,  73., 455.,  99.)
 ('1478901335296316867', 0.16975777, 196.,  88., 210., 112.)
 ('1478900385239798995', 0.16650099,  97., 103., 114., 133.)
 ('1478899470604520731', 0.16400275, 248., 105., 258., 120.)
 ('1478901335296316867', 0.15962017, 149.,  90., 159., 109.)
 ('1478901335296316867', 0.1584513 , 325., 118., 334., 138.)
 ('1478900132157889917', 0.15787952, 246.,  38., 256.,  62.)
 ('1478899462606481570', 0.15708072, 241., 107., 250., 121.)
 ('1478901335296316867', 0.15559423, 326., 123., 336., 145.)
 ('1478900060176835415', 0.15299681, 326., 121., 335., 137.)
 ('1478900121875028906', 0.1529867 ,  60.,  91.,  72., 112.)
 ('1478899846512839335', 0.15127023, 175., 121., 184., 136.)
 ('1478901249601122528', 0.15068462,  39., 168.,  51., 195.)
 ('1478900132157889917', 0.148597  , 245., 118., 257., 136.)
 ('1478899408905909438', 0.14829202, 247., 101., 255., 118.)
 ('1478900925679405380', 0.14647016, 439.,  60., 449.,  79.)
 ('1478900377812355185', 0.14408419, 400.,  43., 412.,  68.)
 ('1478900377812355185', 0.14371714,   5.,  63.,  18.,  85.)
 ('1478900132157889917', 0.13727559, 117.,  93., 129., 118.)
 ('1478900802852152823', 0.136612  , 288., 100., 297., 119.)
 ('1478900132157889917', 0.13559562, 340.,  35., 378.,  77.)
 ('1478899462606481570', 0.13247143,  34., 187.,  53., 221.)
 ('1478900934249733042', 0.13111116,  74.,  13., 106.,  58.)
 ('1478900385239798995', 0.12970081, 151., 132., 159., 146.)
 ('1478900934249733042', 0.12409323, 391.,  87., 414., 132.)
 ('1478899408905909438', 0.1197587 , 243.,  87., 252., 105.)
 ('1478899462606481570', 0.11906895, 241., 112., 250., 127.)
 ('1479498432968767695', 0.1182517 , 270.,  64., 282.,  84.)
 ('1478900895401299721', 0.1161682 , 416.,  48., 425.,  61.)
 ('1478899739682849350', 0.11422241, 445., 105., 457., 134.)
 ('1478901462120820712', 0.11403654, 404., 114., 421., 151.)
 ('1478901335296316867', 0.11254051, 189.,  93., 224., 141.)
 ('1478900934249733042', 0.11097196, 397., 103., 409., 126.)
 ('1478901335296316867', 0.11043534, 437.,  53., 454.,  83.)
 ('1478900132157889917', 0.11019079, 119.,  88., 129., 110.)
 ('1478899129544917445', 0.1094199 , 331., 159., 349., 186.)
 ('1478899470604520731', 0.10907356, 249., 101., 257., 113.)
 ('1478899982480314766', 0.10880654, 402.,  71., 419., 100.)
 ('1478901301588852810', 0.10875995, 186., 127., 192., 135.)
 ('1478900132157889917', 0.10850961, 153.,  84., 158.,  96.)
 ('1478900934249733042', 0.10821947, 381.,   4., 439.,  49.)
 ('1478899462606481570', 0.10758445, 155., 190., 174., 219.)
 ('1478899470604520731', 0.10739294, 248., 110., 258., 127.)
 ('1478901395851910040', 0.10733047,  99., 102., 108., 114.)
 ('1478900803996421191', 0.10565472, 293.,  31., 306.,  55.)
 ('1478900934249733042', 0.10543644,  73.,  23., 135.,  65.)
 ('1478899408905909438', 0.10541718, 423.,  65., 432.,  80.)
 ('1478900060176835415', 0.1053175 , 320.,  98., 328., 113.)
 ('1478900121875028906', 0.10467084, 167., 127., 177., 146.)
 ('1478899897929065646', 0.10451768,  36., 108.,  47., 125.)
 ('1478901282735746234', 0.10411449,  80., 126.,  91., 144.)
 ('1478899617425904275', 0.1039464 , 271.,  76., 284., 101.)
 ('1478901395851910040', 0.10389766, 274., 118., 282., 132.)
 ('1478901335296316867', 0.10389242, 196.,  86., 202., 102.)
 ('1478901335296316867', 0.10384925, 191., 102., 202., 119.)
 ('1478899408905909438', 0.10361179,   2.,  93.,  19., 124.)
 ('1478900060176835415', 0.10304052, 320., 118., 331., 136.)
 ('1478900445225504484', 0.10273106, 330., 112., 340., 126.)
 ('1478901371857822733', 0.10174501, 112., 131., 121., 144.)
 ('1478899628281049213', 0.10143061, 278.,  74., 289., 105.)
 ('1478900445225504484', 0.10087746,  88., 136.,  97., 151.)
 ('1478901249601122528', 0.100724  , 223., 115., 238., 138.)
 ('1478900377812355185', 0.10042884, 397.,  42., 425.,  84.)
 ('1478900064746491130', 0.10012122, 327., 123., 335., 137.)]

交通灯class_id == 5类别,排序后：(第0个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第0个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.         0.71495327 0.71111111 0.         0.         0.
 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.7149532710280374 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第0个
交通灯类别中：该预测box对应image_id=1478900132157889917中所有人工标注框:gt= (8, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478900132157889917没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False])}

交通灯class_id == 5类别,排序后：(第1个)预测的一个box与该图片image_id=1478900385239798995中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5  55 113  61 124]
 [  5  99 105 105 120]
 [  5 150 133 155 143]]
交通灯class_id == 5类别,(第1个)预测的一个box与该图片image_id=1478900385239798995中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.         0.32967033 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.32967032967032966 匹配的索引为： 1
类别class_id=5当中预测的第1个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第1个

交通灯class_id == 5类别,排序后：(第2个)预测的一个box与该图片image_id=1478899897929065646中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5  34 107  44 123]
 [  5  36 104  43 119]
 [  5 241 100 248 113]]
交通灯class_id == 5类别,(第2个)预测的一个box与该图片image_id=1478899897929065646中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.         0.         0.45959596]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.4595959595959596 匹配的索引为： 2
类别class_id=5当中预测的第2个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第2个

交通灯class_id == 5类别,排序后：(第3个)预测的一个box与该图片image_id=1478899373485354010中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  57  73  67  96]
 [  5 343  67 356 100]]
交通灯class_id == 5类别,(第3个)预测的一个box与该图片image_id=1478899373485354010中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.56790123 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5679012345679012 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第3个
交通灯类别中：该预测box对应image_id=1478899373485354010中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 0
第一种情况：交通灯类别中：image_id=1478899373485354010没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True, False])}

交通灯class_id == 5类别,排序后：(第4个)预测的一个box与该图片image_id=1478899362630665678中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5   8 129  17 143]
 [  5 149 122 158 135]
 [  5 267 118 278 137]]
交通灯class_id == 5类别,(第4个)预测的一个box与该图片image_id=1478899362630665678中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.         0.         0.56622517]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5662251655629139 匹配的索引为： 2
交通灯类别中：标识为正确预测的box：第4个
交通灯类别中：该预测box对应image_id=1478899362630665678中所有人工标注框:gt= (3, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 2
第一种情况：交通灯类别中：image_id=1478899362630665678没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True, False]), '1478899362630665678': array([False, False,  True])}

交通灯class_id == 5类别,排序后：(第5个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5 240 113 249 124]
 [  5 240 114 247 130]
 [  5 384 106 390 120]
 [  5 435 126 441 139]]
交通灯class_id == 5类别,(第5个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.         0.         0.36842105 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.3684210526315789 匹配的索引为： 2
类别class_id=5当中预测的第5个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第5个

交通灯class_id == 5类别,排序后：(第6个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第6个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.         0.         0.70172414]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.7017241379310345 匹配的索引为： 4
交通灯类别中：标识为正确预测的box：第6个
交通灯类别中：该预测box对应image_id=1478901335296316867中所有人工标注框:gt= (5, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 4
第一种情况：交通灯类别中：image_id=1478901335296316867没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True, False]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True])}

交通灯class_id == 5类别,排序后：(第7个)预测的一个box与该图片image_id=1478899373485354010中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  57  73  67  96]
 [  5 343  67 356 100]]
交通灯class_id == 5类别,(第7个)预测的一个box与该图片image_id=1478899373485354010中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.63166144]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6316614420062696 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第7个
第二种情况(该图片image_id=1478899373485354010,预测的第7个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=1还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True, False]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True])}

交通灯class_id == 5类别,排序后：(第8个)预测的一个box与该图片image_id=1478901282735746234中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5  70 123  86 146]
 [  5  77 127  86 141]
 [  5 221 109 239 144]
 [  5 225 116 234 136]]
交通灯class_id == 5类别,(第8个)预测的一个box与该图片image_id=1478901282735746234中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.         0.         0.34285714 0.62962963]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6296296296296297 匹配的索引为： 3
交通灯类别中：标识为正确预测的box：第8个
交通灯类别中：该预测box对应image_id=1478901282735746234中所有人工标注框:gt= (4, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 3
第一种情况：交通灯类别中：image_id=1478901282735746234没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True]), '1478901282735746234': array([False, False, False,  True])}

交通灯class_id == 5类别,排序后：(第9个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5 240 113 249 124]
 [  5 240 114 247 130]
 [  5 384 106 390 120]
 [  5 435 126 441 139]]
交通灯class_id == 5类别,(第9个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.5625     0.57377049 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5737704918032787 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第9个
交通灯类别中：该预测box对应image_id=1478900925679405380中所有人工标注框:gt= (4, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478900925679405380没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False])}

交通灯class_id == 5类别,排序后：(第10个)预测的一个box与该图片image_id=1478900934249733042中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第10个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第11个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5   3  93  19 120]
 [  5 241  80 255 106]]
交通灯class_id == 5类别,(第11个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.35207824]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.35207823960880197 匹配的索引为： 1
类别class_id=5当中预测的第11个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第11个

交通灯class_id == 5类别,排序后：(第12个)预测的一个box与该图片image_id=1478899897929065646中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5  34 107  44 123]
 [  5  36 104  43 119]
 [  5 241 100 248 113]]
交通灯class_id == 5类别,(第12个)预测的一个box与该图片image_id=1478899897929065646中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.78947368 0.58333333 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.7894736842105263 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第12个
交通灯类别中：该预测box对应image_id=1478899897929065646中所有人工标注框:gt= (3, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 0
第一种情况：交通灯类别中：image_id=1478899897929065646没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False])}

交通灯class_id == 5类别,排序后：(第13个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第13个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.62686567 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6268656716417911 匹配的索引为： 2
交通灯类别中：标识为正确预测的box：第13个
第二种情况(该图片image_id=1478901335296316867,预测的第13个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=2还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False, False, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False])}

交通灯class_id == 5类别,排序后：(第14个)预测的一个box与该图片image_id=1478899870507739973中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5 163 109 171 124]
 [  5 245 109 253 125]]
交通灯class_id == 5类别,(第14个)预测的一个box与该图片image_id=1478899870507739973中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.53333333]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5333333333333333 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第14个
交通灯类别中：该预测box对应image_id=1478899870507739973中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478899870507739973没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True])}

交通灯class_id == 5类别,排序后：(第15个)预测的一个box与该图片image_id=1478899362630665678中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5   8 129  17 143]
 [  5 149 122 158 135]
 [  5 267 118 278 137]]
交通灯class_id == 5类别,(第15个)预测的一个box与该图片image_id=1478899362630665678中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.         0.58536585 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5853658536585366 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第15个
第二种情况(该图片image_id=1478899362630665678,预测的第15个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=1还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False, False,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True])}

交通灯class_id == 5类别,排序后：(第16个)预测的一个box与该图片image_id=1478899870507739973中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5 163 109 171 124]
 [  5 245 109 253 125]]
交通灯class_id == 5类别,(第16个)预测的一个box与该图片image_id=1478899870507739973中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.18666667 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.18666666666666668 匹配的索引为： 0
类别class_id=5当中预测的第16个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第16个

交通灯class_id == 5类别,排序后：(第17个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第17个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.         0.         0.         0.75892857 0.54901961 0.
 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.7589285714285714 匹配的索引为： 3
交通灯类别中：标识为正确预测的box：第17个
第二种情况(该图片image_id=1478900132157889917,预测的第17个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=3还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False, False, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True])}

交通灯class_id == 5类别,排序后：(第18个)预测的一个box与该图片image_id=1478900064746491130中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  79 116  85 130]
 [  5 319 103 326 120]]
交通灯class_id == 5类别,(第18个)预测的一个box与该图片image_id=1478900064746491130中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.38150289]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.3815028901734104 匹配的索引为： 1
类别class_id=5当中预测的第18个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第18个

交通灯class_id == 5类别,排序后：(第19个)预测的一个box与该图片image_id=1478899982480314766中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5 176  88 191 120]
 [  5 182  95 189 113]
 [  5 239 125 250 148]
 [  5 243 133 249 145]]
交通灯class_id == 5类别,(第19个)预测的一个box与该图片image_id=1478899982480314766中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.45833333 0.57272727 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5727272727272728 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第19个
交通灯类别中：该预测box对应image_id=1478899982480314766中所有人工标注框:gt= (4, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478899982480314766没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False])}

交通灯class_id == 5类别,排序后：(第20个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5  95 118 101 129]
 [  5 115 115 121 125]
 [  5 135 117 140 126]
 [  5 192 122 199 135]]
交通灯class_id == 5类别,(第20个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.         0.         0.         0.58778626]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5877862595419847 匹配的索引为： 3
交通灯类别中：标识为正确预测的box：第20个
交通灯类别中：该预测box对应image_id=1478900121875028906中所有人工标注框:gt= (4, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 3
第一种情况：交通灯类别中：image_id=1478900121875028906没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False, False, False,  True])}

交通灯class_id == 5类别,排序后：(第21个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第21个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.         0.45217391 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.45217391304347826 匹配的索引为： 3
类别class_id=5当中预测的第21个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第21个

交通灯class_id == 5类别,排序后：(第22个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第22个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.49704142 0.         0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.4970414201183432 匹配的索引为： 1
类别class_id=5当中预测的第22个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第22个

交通灯class_id == 5类别,排序后：(第23个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第23个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.         0.53080569 0.46666667 0.         0.         0.
 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5308056872037915 匹配的索引为： 1
规定：再次匹配到同一个gt box是错误的，先匹配到的conf是要大些的(已经排序了)
第三种情况(该图片image_id=1478900132157889917中,前面计算的最大iou匹配上的人工标注框已经被其他预测box占用)：交通灯类别中：标识为错误预测的box：第23个

交通灯class_id == 5类别,排序后：(第24个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5  95 118 101 129]
 [  5 115 115 121 125]
 [  5 135 117 140 126]
 [  5 192 122 199 135]]
交通灯class_id == 5类别,(第24个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.         0.65789474 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6578947368421053 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第24个
第二种情况(该图片image_id=1478900121875028906,预测的第24个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=1还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False, False, False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True])}

交通灯class_id == 5类别,排序后：(第25个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5 240 113 249 124]
 [  5 240 114 247 130]
 [  5 384 106 390 120]
 [  5 435 126 441 139]]
交通灯class_id == 5类别,(第25个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.20220588 0.25925926 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.25925925925925924 匹配的索引为： 1
类别class_id=5当中预测的第25个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第25个

交通灯class_id == 5类别,排序后：(第26个)预测的一个box与该图片image_id=1478899870507739973中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5 163 109 171 124]
 [  5 245 109 253 125]]
交通灯class_id == 5类别,(第26个)预测的一个box与该图片image_id=1478899870507739973中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.45454545 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.45454545454545453 匹配的索引为： 0
类别class_id=5当中预测的第26个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第26个

交通灯class_id == 5类别,排序后：(第27个)预测的一个box与该图片image_id=1478899628281049213中这个类别(交通灯)的所有人工标注框： (1, 5) [[  5 273  79 285 108]]
交通灯class_id == 5类别,(第27个)预测的一个box与该图片image_id=1478899628281049213中这个类别(交通灯)的所有人工标注框_计算iou： (1,) [0.70351759]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.7035175879396985 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第27个
交通灯类别中：该预测box对应image_id=1478899628281049213中所有人工标注框:gt= (1, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 0
第一种情况：交通灯类别中：image_id=1478899628281049213没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True])}

交通灯class_id == 5类别,排序后：(第28个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第28个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.         0.         0.27799228]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.277992277992278 匹配的索引为： 4
类别class_id=5当中预测的第28个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第28个

交通灯class_id == 5类别,排序后：(第29个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第29个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.25138122 0.         0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.2513812154696133 匹配的索引为： 1
类别class_id=5当中预测的第29个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第29个

交通灯class_id == 5类别,排序后：(第30个)预测的一个box与该图片image_id=1478900385239798995中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5  55 113  61 124]
 [  5  99 105 105 120]
 [  5 150 133 155 143]]
交通灯class_id == 5类别,(第30个)预测的一个box与该图片image_id=1478900385239798995中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.         0.17647059 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.17647058823529413 匹配的索引为： 1
类别class_id=5当中预测的第30个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第30个

交通灯class_id == 5类别,排序后：(第31个)预测的一个box与该图片image_id=1478899470604520731中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  69 111  77 127]
 [  5 247 101 257 121]]
交通灯class_id == 5类别,(第31个)预测的一个box与该图片image_id=1478899470604520731中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.62790698]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.627906976744186 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第31个
交通灯类别中：该预测box对应image_id=1478899470604520731中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478899470604520731没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True])}

交通灯class_id == 5类别,排序后：(第32个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第32个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.58536585 0.         0.         0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5853658536585366 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第32个
第二种情况(该图片image_id=1478901335296316867,预测的第32个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=0还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([False, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True])}

交通灯class_id == 5类别,排序后：(第33个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第33个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.         0.29680365 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.2968036529680365 匹配的索引为： 3
类别class_id=5当中预测的第33个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第33个

交通灯class_id == 5类别,排序后：(第34个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第34个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0. 0. 0. 0. 0. 0. 0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第34个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第34个

交通灯class_id == 5类别,排序后：(第35个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  74 114  81 127]
 [  5 242 102 250 119]]
交通灯class_id == 5类别,(第35个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.57831325]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5783132530120482 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第35个
交通灯类别中：该预测box对应image_id=1478899462606481570中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478899462606481570没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True])}

交通灯class_id == 5类别,排序后：(第36个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第36个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.         0.10958904 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.1095890410958904 匹配的索引为： 3
类别class_id=5当中预测的第36个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第36个

交通灯class_id == 5类别,排序后：(第37个)预测的一个box与该图片image_id=1478900060176835415中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  79 115  85 130]
 [  5 319  97 326 114]]
交通灯class_id == 5类别,(第37个)预测的一个box与该图片image_id=1478900060176835415中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第37个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第37个

交通灯class_id == 5类别,排序后：(第38个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5  95 118 101 129]
 [  5 115 115 121 125]
 [  5 135 117 140 126]
 [  5 192 122 199 135]]
交通灯class_id == 5类别,(第38个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0. 0. 0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第38个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第38个

交通灯class_id == 5类别,排序后：(第39个)预测的一个box与该图片image_id=1478899846512839335中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5 175 114 184 131]
 [  5 251 119 257 134]]
交通灯class_id == 5类别,(第39个)预测的一个box与该图片image_id=1478899846512839335中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.45454545 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.45454545454545453 匹配的索引为： 0
类别class_id=5当中预测的第39个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第39个

交通灯class_id == 5类别,排序后：(第40个)预测的一个box与该图片image_id=1478901249601122528中这个类别(交通灯)的所有人工标注框： (1, 5) [[  5 225 116 234 135]]
交通灯class_id == 5类别,(第40个)预测的一个box与该图片image_id=1478901249601122528中这个类别(交通灯)的所有人工标注框_计算iou： (1,) [0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第40个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第40个

交通灯class_id == 5类别,排序后：(第41个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第41个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.         0.         0.         0.         0.         0.65384615
 0.4212963  0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6538461538461539 匹配的索引为： 5
交通灯类别中：标识为正确预测的box：第41个
第二种情况(该图片image_id=1478900132157889917,预测的第41个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=5还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False,  True, False, False, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([False,  True, False,  True, False,  True, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True])}

交通灯class_id == 5类别,排序后：(第42个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5   3  93  19 120]
 [  5 241  80 255 106]]
交通灯class_id == 5类别,(第42个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.08695652]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.08695652173913043 匹配的索引为： 1
类别class_id=5当中预测的第42个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第42个

交通灯class_id == 5类别,排序后：(第43个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5 240 113 249 124]
 [  5 240 114 247 130]
 [  5 384 106 390 120]
 [  5 435 126 441 139]]
交通灯class_id == 5类别,(第43个)预测的一个box与该图片image_id=1478900925679405380中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0. 0. 0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第43个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第43个

交通灯class_id == 5类别,排序后：(第44个)预测的一个box与该图片image_id=1478900377812355185中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第44个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第45个)预测的一个box与该图片image_id=1478900377812355185中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第45个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第46个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第46个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.64 0.   0.   0.   0.   0.   0.   0.  ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.64 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第46个
第二种情况(该图片image_id=1478900132157889917,预测的第46个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=0还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([False,  True, False,  True, False,  True, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([ True,  True, False,  True, False,  True, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True])}

交通灯class_id == 5类别,排序后：(第47个)预测的一个box与该图片image_id=1478900802852152823中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5 106 111 113 124]
 [  5 290 100 299 115]]
交通灯class_id == 5类别,(第47个)预测的一个box与该图片image_id=1478900802852152823中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.52238806]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5223880597014925 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第47个
交通灯类别中：该预测box对应image_id=1478900802852152823中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478900802852152823没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([ True,  True, False,  True, False,  True, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True])}

交通灯class_id == 5类别,排序后：(第48个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第48个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.         0.         0.         0.         0.         0.
 0.         0.63729809]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6372980910425844 匹配的索引为： 7
交通灯类别中：标识为正确预测的box：第48个
第二种情况(该图片image_id=1478900132157889917,预测的第48个box由前面计算的iou最大值而匹配上的人工标注框索引gt_match_index=7还没有被其他预测box占用)：, gt_matched= {'1478900132157889917': array([ True,  True, False,  True, False,  True, False, False]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True])}
第二种情况,gt_matched(字典)更新之后是： {'1478900132157889917': array([ True,  True, False,  True, False,  True, False,  True]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True])}

交通灯class_id == 5类别,排序后：(第49个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  74 114  81 127]
 [  5 242 102 250 119]]
交通灯class_id == 5类别,(第49个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第49个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第49个

交通灯class_id == 5类别,排序后：(第50个)预测的一个box与该图片image_id=1478900934249733042中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第50个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第51个)预测的一个box与该图片image_id=1478900385239798995中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5  55 113  61 124]
 [  5  99 105 105 120]
 [  5 150 133 155 143]]
交通灯class_id == 5类别,(第51个)预测的一个box与该图片image_id=1478900385239798995中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.         0.         0.32786885]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.32786885245901637 匹配的索引为： 2
类别class_id=5当中预测的第51个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第51个

交通灯class_id == 5类别,排序后：(第52个)预测的一个box与该图片image_id=1478900934249733042中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第52个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第53个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5   3  93  19 120]
 [  5 241  80 255 106]]
交通灯class_id == 5类别,(第53个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.44505495]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.44505494505494503 匹配的索引为： 1
类别class_id=5当中预测的第53个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第53个

交通灯class_id == 5类别,排序后：(第54个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  74 114  81 127]
 [  5 242 102 250 119]]
交通灯class_id == 5类别,(第54个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.26046512]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.26046511627906976 匹配的索引为： 1
类别class_id=5当中预测的第54个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第54个

交通灯class_id == 5类别,排序后：(第55个)预测的一个box与该图片image_id=1479498432968767695中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第55个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第56个)预测的一个box与该图片image_id=1478900895401299721中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第56个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第57个)预测的一个box与该图片image_id=1478899739682849350中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第57个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第58个)预测的一个box与该图片image_id=1478901462120820712中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第58个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第59个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第59个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.05830389 0.         0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.05830388692579505 匹配的索引为： 1
类别class_id=5当中预测的第59个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第59个

交通灯class_id == 5类别,排序后：(第60个)预测的一个box与该图片image_id=1478900934249733042中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第60个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第61个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第61个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.         0.         0.         0.50395257]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5039525691699605 匹配的索引为： 4
规定：再次匹配到同一个gt box是错误的，先匹配到的conf是要大些的(已经排序了)
第三种情况(该图片image_id=1478901335296316867中,前面计算的最大iou匹配上的人工标注框已经被其他预测box占用)：交通灯类别中：标识为错误预测的box：第61个

交通灯class_id == 5类别,排序后：(第62个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第62个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.63492063 0.         0.         0.         0.         0.
 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6349206349206349 匹配的索引为： 0
规定：再次匹配到同一个gt box是错误的，先匹配到的conf是要大些的(已经排序了)
第三种情况(该图片image_id=1478900132157889917中,前面计算的最大iou匹配上的人工标注框已经被其他预测box占用)：交通灯类别中：标识为错误预测的box：第62个

交通灯class_id == 5类别,排序后：(第63个)预测的一个box与该图片image_id=1478899129544917445中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第63个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第64个)预测的一个box与该图片image_id=1478899470604520731中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  69 111  77 127]
 [  5 247 101 257 121]]
交通灯class_id == 5类别,(第64个)预测的一个box与该图片image_id=1478899470604520731中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.   0.48]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.48 匹配的索引为： 1
类别class_id=5当中预测的第64个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第64个

交通灯class_id == 5类别,排序后：(第65个)预测的一个box与该图片image_id=1478899982480314766中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5 176  88 191 120]
 [  5 182  95 189 113]
 [  5 239 125 250 148]
 [  5 243 133 249 145]]
交通灯class_id == 5类别,(第65个)预测的一个box与该图片image_id=1478899982480314766中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0. 0. 0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第65个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第65个

交通灯class_id == 5类别,排序后：(第66个)预测的一个box与该图片image_id=1478901301588852810中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第66个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第67个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框： (8, 5) [[  5 117  93 129 109]
 [  5 152  86 163 103]
 [  5 154  86 162 102]
 [  5 187  89 197 108]
 [  5 188  91 195 107]
 [  5 245 116 254 135]
 [  5 245 121 252 134]
 [  5 347  24 380  77]]
交通灯class_id == 5类别,(第67个)预测的一个box与该图片image_id=1478900132157889917中这个类别(交通灯)的所有人工标注框_计算iou： (8,) [0.         0.25380711 0.27027027 0.         0.         0.
 0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.2702702702702703 匹配的索引为： 2
类别class_id=5当中预测的第67个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第67个

交通灯class_id == 5类别,排序后：(第68个)预测的一个box与该图片image_id=1478900934249733042中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第68个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第69个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  74 114  81 127]
 [  5 242 102 250 119]]
交通灯class_id == 5类别,(第69个)预测的一个box与该图片image_id=1478899462606481570中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第69个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第69个

交通灯class_id == 5类别,排序后：(第70个)预测的一个box与该图片image_id=1478899470604520731中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  69 111  77 127]
 [  5 247 101 257 121]]
交通灯class_id == 5类别,(第70个)预测的一个box与该图片image_id=1478899470604520731中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.36531365]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.36531365313653136 匹配的索引为： 1
类别class_id=5当中预测的第70个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第70个

交通灯class_id == 5类别,排序后：(第71个)预测的一个box与该图片image_id=1478901395851910040中这个类别(交通灯)的所有人工标注框： (7, 5) [[  5  98  99 108 115]
 [  5 157 117 161 128]
 [  5 173 107 182 119]
 [  5 188 125 192 132]
 [  5 199 127 206 137]
 [  5 231 122 240 133]
 [  5 313 130 320 139]]
交通灯class_id == 5类别,(第71个)预测的一个box与该图片image_id=1478901395851910040中这个类别(交通灯)的所有人工标注框_计算iou： (7,) [0.675 0.    0.    0.    0.    0.    0.   ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.675 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第71个
交通灯类别中：该预测box对应image_id=1478901395851910040中所有人工标注框:gt= (7, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 0
第一种情况：交通灯类别中：image_id=1478901395851910040没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([ True,  True, False,  True, False,  True, False,  True]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True]), '1478901395851910040': array([ True, False, False, False, False, False, False])}

交通灯class_id == 5类别,排序后：(第72个)预测的一个box与该图片image_id=1478900803996421191中这个类别(交通灯)的所有人工标注框： (1, 5) [[  5  84 117  93 134]]
交通灯class_id == 5类别,(第72个)预测的一个box与该图片image_id=1478900803996421191中这个类别(交通灯)的所有人工标注框_计算iou： (1,) [0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第72个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第72个

交通灯class_id == 5类别,排序后：(第73个)预测的一个box与该图片image_id=1478900934249733042中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第73个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第74个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5   3  93  19 120]
 [  5 241  80 255 106]]
交通灯class_id == 5类别,(第74个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第74个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第74个

交通灯class_id == 5类别,排序后：(第75个)预测的一个box与该图片image_id=1478900060176835415中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  79 115  85 130]
 [  5 319  97 326 114]]
交通灯class_id == 5类别,(第75个)预测的一个box与该图片image_id=1478900060176835415中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.         0.60402685]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6040268456375839 匹配的索引为： 1
交通灯类别中：标识为正确预测的box：第75个
交通灯类别中：该预测box对应image_id=1478900060176835415中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 1
第一种情况：交通灯类别中：image_id=1478900060176835415没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([ True,  True, False,  True, False,  True, False,  True]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True]), '1478901395851910040': array([ True, False, False, False, False, False, False]), '1478900060176835415': array([False,  True])}

交通灯class_id == 5类别,排序后：(第76个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5  95 118 101 129]
 [  5 115 115 121 125]
 [  5 135 117 140 126]
 [  5 192 122 199 135]]
交通灯class_id == 5类别,(第76个)预测的一个box与该图片image_id=1478900121875028906中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0. 0. 0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第76个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第76个

交通灯class_id == 5类别,排序后：(第77个)预测的一个box与该图片image_id=1478899897929065646中这个类别(交通灯)的所有人工标注框： (3, 5) [[  5  34 107  44 123]
 [  5  36 104  43 119]
 [  5 241 100 248 113]]
交通灯class_id == 5类别,(第77个)预测的一个box与该图片image_id=1478899897929065646中这个类别(交通灯)的所有人工标注框_计算iou： (3,) [0.52863436 0.35813953 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.5286343612334802 匹配的索引为： 0
规定：再次匹配到同一个gt box是错误的，先匹配到的conf是要大些的(已经排序了)
第三种情况(该图片image_id=1478899897929065646中,前面计算的最大iou匹配上的人工标注框已经被其他预测box占用)：交通灯类别中：标识为错误预测的box：第77个

交通灯class_id == 5类别,排序后：(第78个)预测的一个box与该图片image_id=1478901282735746234中这个类别(交通灯)的所有人工标注框： (4, 5) [[  5  70 123  86 146]
 [  5  77 127  86 141]
 [  5 221 109 239 144]
 [  5 225 116 234 136]]
交通灯class_id == 5类别,(第78个)预测的一个box与该图片image_id=1478901282735746234中这个类别(交通灯)的所有人工标注框_计算iou： (4,) [0.23580786 0.35       0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.35 匹配的索引为： 1
类别class_id=5当中预测的第78个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第78个

交通灯class_id == 5类别,排序后：(第79个)预测的一个box与该图片image_id=1478899617425904275中这个类别(交通灯)的所有人工标注框： (1, 5) [[  5 272  78 286 106]]
交通灯class_id == 5类别,(第79个)预测的一个box与该图片image_id=1478899617425904275中这个类别(交通灯)的所有人工标注框_计算iou： (1,) [0.62585034]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.6258503401360545 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第79个
交通灯类别中：该预测box对应image_id=1478899617425904275中所有人工标注框:gt= (1, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 0
第一种情况：交通灯类别中：image_id=1478899617425904275没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([ True,  True, False,  True, False,  True, False,  True]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True]), '1478901395851910040': array([ True, False, False, False, False, False, False]), '1478900060176835415': array([False,  True]), '1478899617425904275': array([ True])}

交通灯class_id == 5类别,排序后：(第80个)预测的一个box与该图片image_id=1478901395851910040中这个类别(交通灯)的所有人工标注框： (7, 5) [[  5  98  99 108 115]
 [  5 157 117 161 128]
 [  5 173 107 182 119]
 [  5 188 125 192 132]
 [  5 199 127 206 137]
 [  5 231 122 240 133]
 [  5 313 130 320 139]]
交通灯class_id == 5类别,(第80个)预测的一个box与该图片image_id=1478901395851910040中这个类别(交通灯)的所有人工标注框_计算iou： (7,) [0. 0. 0. 0. 0. 0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第80个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第80个

交通灯class_id == 5类别,排序后：(第81个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第81个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.44897959 0.         0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.4489795918367347 匹配的索引为： 1
类别class_id=5当中预测的第81个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第81个

交通灯class_id == 5类别,排序后：(第82个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框： (5, 5) [[  5 148  91 157 106]
 [  5 194  91 203 104]
 [  5 232  90 240 105]
 [  5 322 118 330 131]
 [  5 434  53 457  97]]
交通灯class_id == 5类别,(第82个)预测的一个box与该图片image_id=1478901335296316867中这个类别(交通灯)的所有人工标注框_计算iou： (5,) [0.         0.05555556 0.         0.         0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.05555555555555555 匹配的索引为： 1
类别class_id=5当中预测的第82个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第82个

交通灯class_id == 5类别,排序后：(第83个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5   3  93  19 120]
 [  5 241  80 255 106]]
交通灯class_id == 5类别,(第83个)预测的一个box与该图片image_id=1478899408905909438中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0.81973435 0.        ]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.8197343453510436 匹配的索引为： 0
交通灯类别中：标识为正确预测的box：第83个
交通灯类别中：该预测box对应image_id=1478899408905909438中所有人工标注框:gt= (2, 5)
该预测box匹配上(占用)的人工标注框索引：gt_match_index: 0
第一种情况：交通灯类别中：image_id=1478899408905909438没在gt_matched中的情况：之后gt_matched= {'1478900132157889917': array([ True,  True, False,  True, False,  True, False,  True]), '1478899373485354010': array([ True,  True]), '1478899362630665678': array([False,  True,  True]), '1478901335296316867': array([ True, False,  True, False,  True]), '1478901282735746234': array([False, False, False,  True]), '1478900925679405380': array([False,  True, False, False]), '1478899897929065646': array([ True, False, False]), '1478899870507739973': array([False,  True]), '1478899982480314766': array([False,  True, False, False]), '1478900121875028906': array([False,  True, False,  True]), '1478899628281049213': array([ True]), '1478899470604520731': array([False,  True]), '1478899462606481570': array([False,  True]), '1478900802852152823': array([False,  True]), '1478901395851910040': array([ True, False, False, False, False, False, False]), '1478900060176835415': array([False,  True]), '1478899617425904275': array([ True]), '1478899408905909438': array([ True, False])}

交通灯class_id == 5类别,排序后：(第84个)预测的一个box与该图片image_id=1478900060176835415中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  79 115  85 130]
 [  5 319  97 326 114]]
交通灯class_id == 5类别,(第84个)预测的一个box与该图片image_id=1478900060176835415中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第84个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第84个

交通灯class_id == 5类别,排序后：(第85个)预测的一个box与该图片image_id=1478900445225504484中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第85个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第86个)预测的一个box与该图片image_id=1478901371857822733中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第86个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第87个)预测的一个box与该图片image_id=1478899628281049213中这个类别(交通灯)的所有人工标注框： (1, 5) [[  5 273  79 285 108]]
交通灯class_id == 5类别,(第87个)预测的一个box与该图片image_id=1478899628281049213中这个类别(交通灯)的所有人工标注框_计算iou： (1,) [0.35897436]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.358974358974359 匹配的索引为： 0
类别class_id=5当中预测的第87个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第87个

交通灯class_id == 5类别,排序后：(第88个)预测的一个box与该图片image_id=1478900445225504484中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第88个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第89个)预测的一个box与该图片image_id=1478901249601122528中这个类别(交通灯)的所有人工标注框： (1, 5) [[  5 225 116 234 135]]
交通灯class_id == 5类别,(第89个)预测的一个box与该图片image_id=1478901249601122528中这个类别(交通灯)的所有人工标注框_计算iou： (1,) [0.49565217]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.4956521739130435 匹配的索引为： 0
类别class_id=5当中预测的第89个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第89个

交通灯class_id == 5类别,排序后：(第90个)预测的一个box与该图片image_id=1478900377812355185中这个类别(交通灯)的所有人工标注框： (0, 5) []
类别class_id=5当中预测的第90个box在它对应的图片中所有该类别的人工标注框为0，说明预测的这个box类别肯定错误啊！

交通灯class_id == 5类别,排序后：(第91个)预测的一个box与该图片image_id=1478900064746491130中这个类别(交通灯)的所有人工标注框： (2, 5) [[  5  79 116  85 130]
 [  5 319 103 326 120]]
交通灯class_id == 5类别,(第91个)预测的一个box与该图片image_id=1478900064746491130中这个类别(交通灯)的所有人工标注框_计算iou： (2,) [0. 0.]
取iou的最大值(所有人工标注的框中与预测的box重合度最大的那个)(看是否大于设定的iou匹配阈值)： 0.0 匹配的索引为： 0
类别class_id=5当中预测的第91个box跟其对应的所有人工标注框iou的最大值 还要小于 我们设定的iou匹配阈值:标识为预测错误的box：第91个

交通灯class_id == 5类别(共92个预测的box),预测正确的box:true_pos= [1 0 0 1 1 0 1 1 1 1 0 0 1 1 1 1 0 1 0 1 1 0 0 0 1 0 0 1 0 0 0 1 1 0 0 1 0
 0 0 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0
 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0]
交通灯class_id == 5类别(共92个预测的box),预测错误的box:false_pos= [0 1 1 0 0 1 0 0 0 0 1 1 0 0 0 0 1 0 1 0 0 1 1 1 0 1 1 0 1 1 1 0 0 1 1 0 1
 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1
 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1]
交通灯class_id == 5类别(共92个预测的box),cumulative_true_pos= [ 1  1  1  2  3  3  4  5  6  7  7  7  8  9 10 11 11 12 12 13 14 14 14 14
 15 15 15 16 16 16 16 17 18 18 18 19 19 19 19 19 19 20 20 20 20 20 21 22
 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 24
 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 27 27 27 27 27]
交通灯class_id == 5类别(共92个预测的box),cumulative_false_pos= [ 0  1  2  2  2  3  3  3  3  3  4  5  5  5  5  5  6  6  7  7  7  8  9 10
 10 11 12 12 13 14 15 15 15 16 17 17 18 19 20 21 22 22 23 24 25 26 26 26
 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 48
 49 50 51 51 52 53 54 54 55 56 57 57 58 59 60 61 62 63 64 65]

计算精准率和召回率(按类别)：交通灯class_id == 5类别(共92个预测的box)
交通灯class_id == 5类别,累计的预测正确的box(顺序是：预测box的置信度从大到小的，如果调整预测结果解码时的置信度阈值将直接影响该类预测box的总数量)： [ 1  1  1  2  3  3  4  5  6  7  7  7  8  9 10 11 11 12 12 13 14 14 14 14
 15 15 15 16 16 16 16 17 18 18 18 19 19 19 19 19 19 20 20 20 20 20 21 22
 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 23 24
 24 24 24 25 25 25 25 26 26 26 26 27 27 27 27 27 27 27 27 27]
交通灯class_id == 5类别,累计的预测错误的box: [ 0  1  2  2  2  3  3  3  3  3  4  5  5  5  5  5  6  6  7  7  7  8  9 10
 10 11 12 12 13 14 15 15 15 16 17 17 18 19 20 21 22 22 23 24 25 26 26 26
 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 48
 49 50 51 51 52 53 54 54 55 56 57 57 58 59 60 61 62 63 64 65]
交通灯class_id == 5类别,随着预测box的总数量的增加，该类别 精准率的变化情况cumulative_precision： 92 [1.         0.5        0.33333333 0.5        0.6        0.5
 0.57142857 0.625      0.66666667 0.7        0.63636364 0.58333333
 0.61538462 0.64285714 0.66666667 0.6875     0.64705882 0.66666667
 0.63157895 0.65       0.66666667 0.63636364 0.60869565 0.58333333
 0.6        0.57692308 0.55555556 0.57142857 0.55172414 0.53333333
 0.51612903 0.53125    0.54545455 0.52941176 0.51428571 0.52777778
 0.51351351 0.5        0.48717949 0.475      0.46341463 0.47619048
 0.46511628 0.45454545 0.44444444 0.43478261 0.44680851 0.45833333
 0.46938776 0.46       0.45098039 0.44230769 0.43396226 0.42592593
 0.41818182 0.41071429 0.40350877 0.39655172 0.38983051 0.38333333
 0.37704918 0.37096774 0.36507937 0.359375   0.35384615 0.34848485
 0.34328358 0.33823529 0.33333333 0.32857143 0.32394366 0.33333333
 0.32876712 0.32432432 0.32       0.32894737 0.32467532 0.32051282
 0.3164557  0.325      0.32098765 0.31707317 0.31325301 0.32142857
 0.31764706 0.31395349 0.31034483 0.30681818 0.30337079 0.3
 0.2967033  0.29347826]
交通灯class_id == 5类别,随着预测box的总数量的增加，该类别 召回率的变化情况(肯定是越来越大的)cumulative_recall： 92 [0.01162791 0.01162791 0.01162791 0.02325581 0.03488372 0.03488372
 0.04651163 0.05813953 0.06976744 0.08139535 0.08139535 0.08139535
 0.09302326 0.10465116 0.11627907 0.12790698 0.12790698 0.13953488
 0.13953488 0.15116279 0.1627907  0.1627907  0.1627907  0.1627907
 0.1744186  0.1744186  0.1744186  0.18604651 0.18604651 0.18604651
 0.18604651 0.19767442 0.20930233 0.20930233 0.20930233 0.22093023
 0.22093023 0.22093023 0.22093023 0.22093023 0.22093023 0.23255814
 0.23255814 0.23255814 0.23255814 0.23255814 0.24418605 0.25581395
 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186
 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186
 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186
 0.26744186 0.26744186 0.26744186 0.26744186 0.26744186 0.27906977
 0.27906977 0.27906977 0.27906977 0.29069767 0.29069767 0.29069767
 0.29069767 0.30232558 0.30232558 0.30232558 0.30232558 0.31395349
 0.31395349 0.31395349 0.31395349 0.31395349 0.31395349 0.31395349
 0.31395349 0.31395349]
计算精准率和召回率的最终结果：按类别index放在列表self.cumulative_precisions与self.cumulative_recalls中

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.00,本次得出的精准率=1.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.10,本次得出的精准率=0.68750

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.20,本次得出的精准率=0.54545

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.30,本次得出的精准率=0.32500

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.40,本次得出的精准率=0.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.50,本次得出的精准率=0.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.60,本次得出的精准率=0.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.70,本次得出的精准率=0.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.80,本次得出的精准率=0.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=0.90,本次得出的精准率=0.00000

计算average精准率(按类别)交通灯class_id == 5类别：循环num_recall_points=11次,本次的累计召回率阈值t=1.00,本次得出的精准率=0.00000

结果：交通灯class_id == 5类别, average精准率mode=sample,召回率点数=11,平均精准率(上面每次得出的精准率相加除以总次数)：0.23254
平均精准率的最终结果：按类别index放在列表self.average_precisions中

最终的结果：mean_average_precision(每个类别的平均精准率再求平均值-不算类别0背景): 0.34797135065783324
average_precisions(每个类别的平均精准率): 6 [0.0, 0.6154775373254778, 0.4327951635199534, 0.18631545740241257, 0.2727272727272727, 0.2325413223140496]
